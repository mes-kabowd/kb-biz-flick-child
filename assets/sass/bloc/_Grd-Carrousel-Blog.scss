:root {
  --rad: .7rem;
  --dur: .3s;
  --color-dark: #2f2f2f;
  --color-light: #fff;
  --color-brand: #57bd84;
  --font-fam: 'Lato', sans-serif;
  --btn-width: 6rem;
  --bez: cubic-bezier(0, 0, 0.43, 1.49);
  --gray2:#b2becd;
  --text-color:var(--gray2);
  --gray4:#454e56;
  --tag-bg:var(--gray4);
  --code-bg:#22262f;
  --card-bg:var(--gray5);
  --overlay-bg:rgba(0,0,0,0.9);
  --h-border:2px dashed var(--nav-bg);
  --nav-border:2px dashed var(--text-color);
  --card-radius:0.25em;
  transition: all .3s ease;
}


// Exemple de fichier Sass (ex. style.scss)
$primary-color: #333;
$secondary-color: #fff;
$transition-speed: 0.3s;



.Grd-Carrousel-Blog{
  $main-color: #4eb6ac;
  box-sizing: border-box;

  display: flex;
  align-items: center;
  flex-direction: column;
  justify-content: space-between;

  padding: 0;
  width: 90vw;
  
  h2{
    margin: 5%;
    text-align: center;
  }

  .Filtre{
    width: 100%;
    // background-color: red;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    
    .Mini-Entete{
      margin: 2.5%;
      display: flex;
      justify-content: space-around;
    }

    ul{
      display: none;
      width: 80vw;
    
      li {
        a {
          text-decoration: none;
          color: $primary-color;
          padding: 8px 16px;
          border: 1px solid $primary-color;
          border-radius: 4px;
          transition: background $transition-speed, color $transition-speed;
  
          &:hover,
          &.active {
            background: $primary-color;
            color: $secondary-color;
          }
        }
      }
  

    }


    .Mini-Entete{

      form {
        position: relative;
        width: 50vw;
        background: var(--color-brand);
        border-radius: var(--rad);
    
        input, button {
          font-family: var(--font-fam);
          border: 0;
          color: var(--color-dark);
          font-size: 1.8rem;
        }

        input[type="search"] {
          outline: 0; // <-- shold probably remove this for better accessibility, adding for demo aesthetics for now.
          width: 100%;
          background: var(--color-light);
          padding: 0 1.6rem;
          border-radius: var(--rad);
          appearance: none; //for iOS input[type="search"] roundedness issue. border-radius alone doesn't work
          transition: all var(--dur) var(--bez);
          transition-property: width, border-radius;
          z-index: 1;
          position: relative;
        }

        button {
          display: none; // prevent being able to tab to it
          position: absolute;
          top: 0;
          right: 0;
          width: var(--btn-width);
          font-weight: bold;
          background: var(--color-brand);
          border-radius: 0 var(--rad) var(--rad) 0;
        }

        input:not(:placeholder-shown) {
          border-radius: var(--rad) 0 0 var(--rad);
          width: calc(100% - var(--btn-width));
          + button {
            display: block;
          }
        }

        label {
          position: absolute;
          clip: rect(1px, 1px, 1px, 1px);
          padding: 0;
          border: 0;
          height: 1px;
          width: 1px;
          overflow: hidden;
        }
      }
    }
        
    ul{}
  }

  .mainCard {
      text-align: center;
      display: block;
      padding: 0;
      width: 100%;
      margin: 60px auto;
      background-color: white;
      box-shadow: 0 5px 40px rgba(0, 0, 0, 0.2);
      -webkit-animation-name: mainCard;
      animation-name: mainCard;
      -webkit-animation-duration: 1s;
      animation-duration: 1s;
      -webkit-animation-delay: 0s;
      animation-delay: 0s;
      -webkit-animation-fill-mode: both;
      animation-fill-mode: both;

      // Enlever l’imbrication pour garder les keyframes globales
      @at-root {
          @-webkit-keyframes mainCard {
          0% { transform: scale(0); }
          }
          @keyframes mainCard {
          0% { transform: scale(0); }
          }
      }

      // Entête de la carte
      .mainCardHeader {
          background-color: AQUAMARINE;
          height: 100px;
          width: 100%;
          -webkit-animation-name: mainCardHeader;
          animation-name: mainCardHeader;
          -webkit-animation-duration: 0.4s;
          animation-duration: 0.4s;
          -webkit-animation-delay: 0.5s;
          animation-delay: 0.5s;
          -webkit-animation-fill-mode: both;
          animation-fill-mode: both;
      }

      // Placer les keyframes de mainCardHeader globalement
      @at-root {
          @-webkit-keyframes mainCardHeader {
          0% { transform: scaleY(0); }
          }
          @keyframes mainCardHeader {
          0% { transform: scaleY(0); }
          }
      }

      // Contenu de la carte
      .articles {
          display: flex;
          flex-wrap: wrap;
          gap: 25px; // Espacement entre les articles


          .miniCard {
              border-radius: 12px;
              box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
              -webkit-animation-name: miniCard;
              animation-name: miniCard;
              -webkit-animation-duration: 1s;
              animation-duration: 1s;
              -webkit-animation-delay: 0.8s;
              animation-delay: 0.8s;
              -webkit-animation-fill-mode: both;
              animation-fill-mode: both;

              flex: 1 1 calc(30% - 20px); // Ajuste la largeur en fonction du nombre de colonnes
              transition: opacity 0.3s ease, transform 0.3s ease;
              opacity: 1;

              &.hidden {
                opacity: 0;
                transform: scale(0.95);
                pointer-events: none;
                position: absolute; // Supprime l’influence sur la mise en page

              }

              
              img{
                  padding: 2.5%;
                  height: 40%;
                  object-fit: contain;
              }
              .InfoBlog{
                  height: 50%;
                  padding: 2.5%;
                  display: flex;
                  flex-direction: column;
                  align-items: center;
                  justify-content: space-between;
              }
          }
      }
  }

    
  // Keyframes de la miniCard à conserver en global
  @at-root {
    @-webkit-keyframes miniCard {
      0% { 
        transform: scale(0); 
        opacity: 0;
      }
      10%{
        opacity: 1;
      }
      50% { transform: scale(1.05); }
      100% { transform: scale(1); }
    }

    @keyframes miniCard {
      0% { 
        transform: scale(0); 
        opacity: 0;
      }
      10%{
        opacity: 1;
      }
      50% { transform: scale(1.05); }
      100% { transform: scale(1); }
    }
  }


  @media screen and (min-width: 576px) {}
  
  @media screen and (min-width: 768px) {}
  
  @media screen and (min-width: 992px) {
    .Filtre{
      width: 100%;
      display: flex;
      flex-direction: column;
      justify-content: space-around;
      
      
      ul{
        margin: 2.5%;
        display: flex;
        justify-content: space-around;
        width: 80vw;
      }


      .Mini-Entete{

        form {
            position: relative;
            width: 50vw;
            background: var(--color-brand);
            border-radius: var(--rad);
        
            input, button {
              font-family: var(--font-fam);
              border: 0;
              color: var(--color-dark);
              font-size: 1.8rem;
            }
            input[type="search"] {
              outline: 0; // <-- shold probably remove this for better accessibility, adding for demo aesthetics for now.
              width: 100%;
              background: var(--color-light);
              padding: 0 1.6rem;
              border-radius: var(--rad);
              appearance: none; //for iOS input[type="search"] roundedness issue. border-radius alone doesn't work
              transition: all var(--dur) var(--bez);
              transition-property: width, border-radius;
              z-index: 1;
              font-size: xx-large;
              position: relative;
            }
            button {
              display: none; // prevent being able to tab to it
              position: absolute;
              top: 0;
              right: 0;
              width: var(--btn-width);
              font-weight: bold;
              background: var(--color-brand);
              border-radius: 0 var(--rad) var(--rad) 0;
            }
            input:not(:placeholder-shown) {
              border-radius: var(--rad) 0 0 var(--rad);
              width: calc(100% - var(--btn-width));
              + button {
                display: block;
              }
            }
            label {
              position: absolute;
              clip: rect(1px, 1px, 1px, 1px);
              padding: 0;
              border: 0;
              height: 1px;
              width: 1px;
              overflow: hidden;
            }
        }
      }
          
    }
  }
  
  @media screen and (min-width: 1200px) {}
}